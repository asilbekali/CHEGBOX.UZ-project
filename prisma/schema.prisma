// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model city {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String   @unique
  password  String
  role      Role     @default(USER)
  cityId    Int
  city      city     @relation(fields: [cityId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Elon      Elon[]
}

model Elon {
  id         Int       @id @default(autoincrement())
  name       String
  image      String
  userId     Int
  user       User      @relation(fields: [userId], references: [id])
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  Product    Product?  @relation(fields: [productId], references: [id])
  productId  Int?
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Elon      Elon[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  image       String
  price       Float
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Elon        Elon[]
}

// This is an enum for user roles

enum Role {
  USER
  ADMIN
  SUPER_ADMIN
  SALLER
}
